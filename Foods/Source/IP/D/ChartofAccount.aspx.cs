using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Collections;
using System.Data;
using System.Data.SqlClient;
using System.Data.OleDb;
using System.Configuration;
using System.Text.RegularExpressions;
using System.IO;
using DataAccess;

using NHibernate;
using NHibernate.Criterion;
using Foods;

namespace Foods
{
    public partial class ChartofAccount : System.Web.UI.Page
    {
        SqlConnection con = DataAccess.DBConnection.connection();

        DBConnection dbconnection = new DBConnection();
        string query, str, b;
        int v = 0;
        SqlCommand com;
  

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!this.IsPostBack)
            {
                Initial();                
            }
        }

        #region Load Initial Parameters in Server Side

        private  void Initial()
        {
            
            FillGrid();
            AutoID();
            BindDll();
            TBAccountGeneratedID.Enabled = false;
            TBAccountGeneratedID.Enabled = false;
            TBSubAccGeneratedID.Enabled = false;
            TBAccountCategoryNameID.Enabled = false;
            TBaccountcategoriesfourGeneratedID.Enabled = false;
            TBsubaccountcategoriesfiveGeneratedID.Enabled = false;
            pnlaccfour.Visible = false;
            pnlaccfiv.Visible = false;

            try
            {
                string user = Session["user"].ToString();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }

        #endregion

        #region AutoGeneratedID

        public void AutoID()
        {
            ShowAccount();
            ShowSubAccount();
            ShowAccountCategoryID();
            ShowAccountCategoryFourID();
            ShowAccountCategoryFiveID();
        }


        public void ShowAccount()
        {
            try
            {

                str = "select HeadID from Head where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by HeadID desc ";
                SqlCommand cmd = new SqlCommand(str, con);
                con.Open();

                DataTable dt_ = new DataTable();

                SqlDataAdapter adp = new SqlDataAdapter(cmd);
                adp.Fill(dt_);
                if (dt_.Rows.Count <= 0)
                {
                    TBAccountGeneratedID.Text = "001";
                }
                else
                {
                    SqlDataReader reader = cmd.ExecuteReader();               
                    while (reader.Read())
                    {
                        if (TBAccountGeneratedID.Text == "")
                        {
                            int v = Convert.ToInt32(reader["HeadID"].ToString());
                            int b = v + 1;
                            TBAccountGeneratedID.Text = "00" + b.ToString();
                        }
                    }
                }
                con.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public void ShowSubAccount()
        {
            try
            {

                 str = "select SubHeadID from SubHead where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by SubHeadID desc";
                SqlCommand cmd = new SqlCommand(str, con);
                con.Open();

                DataTable dt_ = new DataTable();

                SqlDataAdapter adp = new SqlDataAdapter(cmd);
                adp.Fill(dt_);
                if (dt_.Rows.Count <= 0)
                {
                    TBSubAccGeneratedID.Text = "1";
                }
                else
                {
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        if (TBSubAccGeneratedID.Text == "")
                        {
                            int v = Convert.ToInt32(reader["SubHeadID"].ToString());
                            int b = v + 1;
                            TBSubAccGeneratedID.Text = b.ToString();

                        }
                    }
                }
                con.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public void ShowAccountCategoryID()
        {
            try
            {

                str = "select SubHeadCategoriesID from SubHeadCategories where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by SubHeadCategoriesID desc";
                SqlCommand cmd = new SqlCommand(str, con);
                con.Open();

                DataTable dt_ = new DataTable();

                SqlDataAdapter adp = new SqlDataAdapter(cmd);
                adp.Fill(dt_);
                if (dt_.Rows.Count <= 0)
                {
                    TBAccountCategoryNameID.Text = "1";
                }
                else
                {
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        if (TBAccountCategoryNameID.Text == "")
                        {
                            int v = Convert.ToInt32(reader["SubHeadCategoriesID"].ToString());
                            int b = v + 1;
                            TBAccountCategoryNameID.Text = b.ToString();

                        }
                    }
                }
                con.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public void ShowAccountCategoryFourID()
        {
            try
            {

                str = "select subheadcategoryfourID from subheadcategoryfour where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by subheadcategoryfourID desc";

                SqlCommand cmd = new SqlCommand(str, con);
                con.Open();
                DataTable dt_ = new DataTable();

                SqlDataAdapter adp = new SqlDataAdapter(cmd);
                adp.Fill(dt_);
                if (dt_.Rows.Count <= 0)
                {
                    TBaccountcategoriesfourGeneratedID.Text = "1";
                }
                else
                {
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        if (TBaccountcategoriesfourGeneratedID.Text == "")
                        {
                            int v = Convert.ToInt32(reader["subheadcategoryfourID"].ToString());
                            int b = v + 1;
                            TBaccountcategoriesfourGeneratedID.Text = b.ToString();

                        }
                    }                    
                }
                con.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public void ShowAccountCategoryFiveID()
        {
            try
            {

                str = "select subheadcategoryfiveID from subheadcategoryfive where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by subheadcategoryfiveID desc";

                SqlCommand cmd = new SqlCommand(str, con);
                con.Open();

                DataTable dt_ = new DataTable();

                SqlDataAdapter adp = new SqlDataAdapter(cmd);
                adp.Fill(dt_);
                if (dt_.Rows.Count <= 0)
                {
                    TBsubaccountcategoriesfiveGeneratedID.Text = "1";
                }
                else
                {
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        if (TBsubaccountcategoriesfiveGeneratedID.Text == "")
                        {
                            int v = Convert.ToInt32(reader["subheadcategoryfiveID"].ToString());
                            int b = v + 1;
                            TBsubaccountcategoriesfiveGeneratedID.Text = b.ToString();
                        }
                    }
                   
                }
                con.Close();
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        #endregion

       
        public void FillGrid()
        {
            try
            {
                /*  Head */
                DataTable dtHead = new DataTable();
                //dtHead = HeadManager.GetHeadList();
                dtHead = DBConnection.GetQueryData(" select * from Head  where CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'");

                GVAccouont.DataSource = dtHead;
                GVAccouont.DataBind();
                ViewState["Head"] = dtHead;

                /*  Sub Head */
                DataTable dtSubHead = new DataTable();
                //dtSubHead = SubHeadManager.GetSubHeadList();
                dtSubHead = DBConnection.GetQueryData(" select * from SubHead  where CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'");

                GVSubAcc.DataSource = dtSubHead;
                GVSubAcc.DataBind();
                ViewState["SubHead"] = dtSubHead;

                /*  Sub Head Categories */
                DataTable dtSubHeadCat = new DataTable();
                //dtSubHeadCat = SubHeadCategoriesManager.GetSubHeadCatList();
                dtSubHeadCat = DBConnection.GetQueryData(" select * from SubHeadCategories  where CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'");


                GVSubAccountCatgories.DataSource = dtSubHeadCat;
                GVSubAccountCatgories.DataBind();
                ViewState["SubHeadCategories"] = dtSubHeadCat;


                /*  Sub Head Categories Four */
                DataTable dtSubHeadCatFour = new DataTable();
                //dtSubHeadCatFour =subheadcategoryfourManager.GetHeadFourList();
                dtSubHeadCat = DBConnection.GetQueryData(" select * from subheadcategoryfour  where CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'");


                GVFour.DataSource = dtSubHeadCatFour;
                GVFour.DataBind();
                ViewState["SubHeadCatFourManag"] = dtSubHeadCatFour;


                /*  Sub Head Categories Five */
                DataTable dtSubHeadCatFive = new DataTable();
                //dtSubHeadCatFive = subheadcategoryfiveManager.GetHeadFiveList();
                dtSubHeadCatFive = DBConnection.GetQueryData(" select * from subheadcategoryfive  where CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'");


                GVFive.DataSource = dtSubHeadCatFive;
                GVFive.DataBind();
                ViewState["SubHeadCatFiveManag"] = dtSubHeadCatFour;

            }
            catch (Exception ex)
            {
                //throw;
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }

        public void BindDll()
        {
            // For Account Category Three

            //using (SqlCommand cmd = new SqlCommand())
            //{
            //    cmd.CommandText = " select rtrim('[' + CAST(CustomerID AS VARCHAR(200)) + ']-C-' + CustomerName ) as [nam], " +
            //        " CustomerID as [ID] from Customers_ " +
            //        " union all " +
            //        " select rtrim('[' + CAST(ven_id AS VARCHAR(200)) + ']-V-' + ven_nam ) as [nam], ven_id as [ID] from t_ven";

            //    cmd.Connection = con;
            //    con.Open();

            //    DataTable dtNam = new DataTable();
            //    SqlDataAdapter adp = new SqlDataAdapter(cmd);
            //    adp.Fill(dtNam);


            //    DDLAccCat.DataSource = dtNam;
            //    DDLAccCat.DataTextField = "nam";
            //    DDLAccCat.DataValueField = "ID";
            //    DDLAccCat.DataBind();
            //    DDLAccCat.Items.Add(new ListItem("--Select--", "0"));

            //    con.Close();
            //}
            DataTable dtheadbind = new DataTable();
            query = "select HeadName, HeadGeneratedID from Head where CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "'";
            dtheadbind = DBConnection.GetQueryData(query);
            DDLHead.DataSource = dtheadbind;//HeadManager.GetHeadForDLL();
            DDLHead.DataTextField = "HeadName";
            DDLHead.DataValueField = "HeadGeneratedID";
            DDLHead.DataBind();
            DDLHead.Items.Add(new ListItem("Select...", "0"));
            DDLHead.SelectedValue = "0";



            DDLAccountName.DataSource = dtheadbind;//HeadManager.GetHeadForDLL();
            DDLAccountName.DataTextField = "HeadName";
            DDLAccountName.DataValueField = "HeadGeneratedID";
            DDLAccountName.DataBind();
            DDLAccountName.Items.Add(new ListItem("Select...", "0"));
            DDLAccountName.SelectedValue = "0";



            //CompanyId = '" + Session["CompanyID"] + "' and BranchId= '" + Session["BranchID"] + "'"
            DLLCatefourAccName.DataSource = dtheadbind; //HeadManager.GetHeadForDLL();
            DLLCatefourAccName.DataTextField = "HeadName";
            DLLCatefourAccName.DataValueField = "HeadGeneratedID";
            DLLCatefourAccName.DataBind();
            DLLCatefourAccName.Items.Add(new ListItem("Select...", "0"));
            DLLCatefourAccName.SelectedValue = "0";
            //DLLCatefourAccName.AppendDataBoundItems = true;


            DLLCatefiveAccName.DataSource = dtheadbind; // HeadManager.GetHeadForDLL();
            DLLCatefiveAccName.DataTextField = "HeadName";
            DLLCatefiveAccName.DataValueField = "HeadGeneratedID";
            DLLCatefiveAccName.DataBind();
            DLLCatefiveAccName.Items.Add(new ListItem("Select...", "0"));
            DLLCatefiveAccName.SelectedValue = "0";
            //DLLCatefiveAccName.AppendDataBoundItems = true;
        }

        protected void LinkBtnInsertHead_Click(object sender, EventArgs e)
        {
            con.Open();

            SqlCommand command = con.CreateCommand();
            SqlTransaction transaction;

            // Start a local transaction.
            transaction = con.BeginTransaction("SampleTransaction");

            // Must assign both transaction object and connection 
            // to Command object for a pending local transaction
            command.Connection = con;
            command.Transaction = transaction;

            try
            {
        

                if (TBInsert.Value == "")
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = "Please Write Head!!";
                        TBInsert.Focus();

                    }
                    else
                    {
                        command.CommandText = " INSERT INTO [Head] ([HeadName] ,[HeadGeneratedID] ,[CreatedAt] ,[CreatedBy] , " +
                        "[HeadKey], CompanyId, BranchId)  VALUES " +
                        " ('" + TBInsert.Value + "' ,'" + TBAccountGeneratedID.Text + "','" + DateTime.Now + "'" +
                        ",'" + Session["user"] + "','" + TBAccountGeneratedID.Text + "','" + Session["CompanyID"] + "','" + Session["BranchID"] + "' )";

                        command.ExecuteNonQuery();
                        //Head head = new Head();

                        //head.HeadID       = HFaccount.Value;
                        //head.HeadName = string.IsNullOrEmpty(TBInsert.Value) ? null : TBInsert.Value;
                        //head.HeadGeneratedID = string.IsNullOrEmpty(TBAccountGeneratedID.Text) ? null : TBAccountGeneratedID.Text;
                        //head.CreatedAt = DateTime.Now;
                        //head.CreatedBy = Session["user"].ToString();
                        //head.HeadKey = string.IsNullOrEmpty(TBAccountGeneratedID.Text) ? null : TBAccountGeneratedID.Text;

                        //HeadManager headmanager = new HeadManager(head);
                        //headmanager.Save();
                       
                    }

                // Attempt to commit the transaction.
                transaction.Commit();

            }
            catch (Exception ex)
            {
                Console.WriteLine("Commit Exception Type: {0}", ex.GetType());
                Console.WriteLine("  Message: {0}", ex.Message);

                // Attempt to roll back the transaction. 
                try
                {
                    transaction.Rollback();
                }
                catch (Exception ex2)
                {
                    // This catch block will handle any errors that may have occurred 
                    // on the server that would cause the rollback to fail, such as 
                    // a closed connection.
                    Console.WriteLine("Rollback Exception Type: {0}", ex2.GetType());
                    Console.WriteLine("  Message: {0}", ex2.Message);
                }
            }
            finally
            {
                con.Close();
                clearhead();
                AutoID();
                FillGrid();
                BindDll();
                TBInsert.Focus();
              
            }
            
        }

        public void clearhead()
        {
            TBInsert.Value  = "";
            HFaccount.Value = "";
            TBAccountGeneratedID.Text = "";
        }

        public void clearsubhead()
        {
            TBSubAccGeneratedID.Text = "";
            TbAddSubAccount.Value = "";
            HFSubAccount.Value = "";
        }

        protected void LinkBtnSubAccInsert_Click(object sender, EventArgs e)
        {
            con.Open();

            SqlCommand command = con.CreateCommand();
            SqlTransaction transaction;

            // Start a local transaction.
            transaction = con.BeginTransaction("SampleTransaction");

            // Must assign both transaction object and connection 
            // to Command object for a pending local transaction
            command.Connection = con;
            command.Transaction = transaction;

            try
            {

                if (TbAddSubAccount.Value == "" || DDLHead.SelectedValue == "0")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Please Write SomeThing in Sub Head and also select some thing from Head!!";
                    TbAddSubAccount.Focus();

                }
                else
                {

                    query = " select top 1 right(SubHeadGeneratedID,1) as [ID] from SubHead  " +
                         " where HeadGeneratedID = '" + DDLHead.SelectedValue + "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by SubHeadGeneratedID desc ";

                    DataTable dt_ = new DataTable();

                    dt_ = DataAccess.DBConnection.GetQueryData(query);

                    if (dt_.Rows.Count > 0)
                    {
                        v = Convert.ToInt32(dt_.Rows[0]["ID"].ToString()) + 1;


                        b = DDLHead.SelectedValue.Trim() + TBSubAccGeneratedID.Text;
                    }
                    else
                    {
                        b = DDLHead.SelectedValue.Trim() + 1;
                    }

                    TBSubAccGeneratedID.Text = b.ToString();


                    //SubHead subhead = new SubHead();

                    //subhead.SubHeadID = HFSubAccount.Value;
                    //subhead.SubHeadName = string.IsNullOrEmpty(TbAddSubAccount.Value) ? null : TbAddSubAccount.Value;
                    //subhead.SubHeadGeneratedID = string.IsNullOrEmpty(TBSubAccGeneratedID.Text) ? null : TBSubAccGeneratedID.Text;
                    //subhead.HeadGeneratedID = string.IsNullOrEmpty(DDLHead.SelectedValue) ? null : DDLHead.SelectedValue;
                    //subhead.CraetedAt = DateTime.Now;
                    //subhead.CreatedBy = Session["user"].ToString();
                    //subhead.SubHeadKey = string.IsNullOrEmpty(TBSubAccGeneratedID.Text) ? null : TBSubAccGeneratedID.Text;

                    //SubHeadManager subheadmanager = new SubHeadManager(subhead);
                    //subheadmanager.Save();

                  
                    //TbAddSubAccount.Focus();

                    command.CommandText = " INSERT INTO [SubHead] ([SubHeadName] ,[SubHeadGeneratedID] ,[HeadGeneratedID], [CraetedAt] ,[CreatedBy] , " +
                    "[SubHeadKey], CompanyId, BranchId)  VALUES " +
                    " ('" + TbAddSubAccount.Value + "' ,'" + TBSubAccGeneratedID.Text + "','" + DDLHead.SelectedValue + "','" + DateTime.Now + "'" +
                    ",'" + Session["user"] + "','" + TBAccountGeneratedID.Text + "','" + Session["CompanyID"] + "','" + Session["BranchID"] + "' )";

                    command.ExecuteNonQuery();
                   
                }

                // Attempt to commit the transaction.
                transaction.Commit();

            }
            catch (Exception ex)
            {
                Console.WriteLine("Commit Exception Type: {0}", ex.GetType());
                Console.WriteLine("  Message: {0}", ex.Message);

                // Attempt to roll back the transaction. 
                try
                {
                    transaction.Rollback();
                }
                catch (Exception ex2)
                {
                    // This catch block will handle any errors that may have occurred 
                    // on the server that would cause the rollback to fail, such as 
                    // a closed connection.
                    Console.WriteLine("Rollback Exception Type: {0}", ex2.GetType());
                    Console.WriteLine("  Message: {0}", ex2.Message);
                }
            }
            finally
            {
                con.Close();
                clearsubhead();
                AutoID();
                FillGrid();
                BindDll();

            }           
        }

        protected void DDLAccountName_SelectedIndexChanged(object sender, EventArgs e)
        {
            query = "SELECT  SubHeadGeneratedID, SubHeadName FROM SubHead where HeadGeneratedID ='" + DDLAccountName.SelectedValue.Trim() + 
                "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' and SubHeadName not like '%DEL%'";
            DataTable dtddl_accnam = new DataTable();
            dtddl_accnam = DBConnection.GetQueryData(query);
            // DDLSubAccountName.DataSource = SubHeadManager.GetSubHead(DDLAccountName.SelectedValue);
            DDLSubAccountName.DataSource = dtddl_accnam;
            DDLSubAccountName.DataTextField = "SubHeadName";
            DDLSubAccountName.DataValueField = "SubHeadGeneratedID";
            DDLSubAccountName.DataBind();
            DDLSubAccountName.Items.Add(new ListItem("Select...", "0"));
            DDLSubAccountName.SelectedValue = "0";

        }

        protected void LinkBtnaccountcategoriesInsert_Click(object sender, EventArgs e)
        {

            con.Open();

            SqlCommand command = con.CreateCommand();
            SqlTransaction transaction;

            // Start a local transaction.
            transaction = con.BeginTransaction("SampleTransaction");

            // Must assign both transaction object and connection 
            // to Command object for a pending local transaction
            command.Connection = con;
            command.Transaction = transaction;

            try
            {

                //if (TBaccountcategories.Value == "" || DDLSubAccountName.SelectedValue == "0" || DDLAccountName.SelectedValue == "0") DDLAccCat.SelectedValue == "0"
                if (DDLSubAccountName.SelectedValue == "0" || DDLAccountName.SelectedValue == "0")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Please Write SomeThing in Head Categories and also select some thing from Head and Sub Head!!";
                    TbAddSubAccount.Focus();

                }
                else
                {
                   

                    query = " select top 1 right(SubHeadCategoriesGeneratedID,1) as [ID] from SubHeadCategories  " +
                     " where SubHeadGeneratedID = '" + DDLSubAccountName.SelectedValue + "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' order by SubHeadCategoriesGeneratedID desc ";


                    DataTable dt_ = new DataTable();

                    dt_ = DataAccess.DBConnection.GetQueryData(query);

                    if (dt_.Rows.Count > 0)
                    {
                        v = Convert.ToInt32(dt_.Rows[0]["ID"].ToString()) + 1;

                        b = DDLSubAccountName.SelectedValue.Trim() + TBAccountCategoryNameID.Text;
                    }
                    else
                    {
                        b = DDLSubAccountName.SelectedValue.Trim() + 1;
                    }


                    TBAccountCategoryNameID.Text = b.ToString();
                    //SubHeadCategories subheadcat = new SubHeadCategories();

                    //subheadcat.SubHeadCategoriesID = HFAccountCategoryName.Value;
                    //subheadcat.ven_id = "1";//string.IsNullOrEmpty(DDLAccCat.SelectedValue) ? null : DDLAccCat.SelectedValue;
                    //subheadcat.SubHeadCategoriesName ="abc"; //string.IsNullOrEmpty(DDLAccCat.SelectedItem.Text) ? null : DDLAccCat.SelectedItem.Text;
                    //subheadcat.SubHeadCategoriesName = string.IsNullOrEmpty(TBaccountcategories.Value) ? null : TBaccountcategories.Value;
                    //subheadcat.SubHeadCategoriesGeneratedID = string.IsNullOrEmpty(TBAccountCategoryNameID.Text) ? null : TBAccountCategoryNameID.Text;
                    //subheadcat.HeadGeneratedID = string.IsNullOrEmpty(DDLAccountName.SelectedValue) ? null : DDLAccountName.SelectedValue;
                    //subheadcat.SubHeadGeneratedID = string.IsNullOrEmpty(DDLSubAccountName.SelectedValue) ? null : DDLSubAccountName.SelectedValue;
                    //subheadcat.CreatedAt = DateTime.Now;
                    //subheadcat.CreatedBy = Session["user"].ToString();
                    //subheadcat.SubCategoriesKey = string.IsNullOrEmpty(TBAccountCategoryNameID.Text) ? null : TBAccountCategoryNameID.Text;

                    //SubHeadCategoriesManager subheadcatmanag = new SubHeadCategoriesManager(subheadcat);
                    //subheadcatmanag.Save();

                    command.CommandText = " INSERT INTO [SubHeadCategories] ([ven_id] ,[SubHeadCategoriesName] ,[SubHeadCategoriesGeneratedID] ,[HeadGeneratedID] , " +
                    "[SubHeadGeneratedID],[CreatedAt] " +
                    " ,[CreatedBy] ,[SubCategoriesKey], CompanyId, BranchId)  VALUES " +
                    " ('1', '" + TBaccountcategories.Value + "' ,'" + TBAccountCategoryNameID.Text + "','" + DDLAccountName.SelectedValue + "', '" + DDLSubAccountName.SelectedValue + "','" + DateTime.Now + "'" +
                    ",'" + Session["user"] + "','" + TBAccountCategoryNameID.Text + "','" + Session["CompanyID"] + "','" + Session["BranchID"] + "' )";

                    command.ExecuteNonQuery();
                                   
                }
                // Attempt to commit the transaction.
                transaction.Commit();

            }
            catch (Exception ex)
            {
                Console.WriteLine("Commit Exception Type: {0}", ex.GetType());
                Console.WriteLine("  Message: {0}", ex.Message);

                // Attempt to roll back the transaction. 
                try
                {
                    transaction.Rollback();
                }
                catch (Exception ex2)
                {
                    // This catch block will handle any errors that may have occurred 
                    // on the server that would cause the rollback to fail, such as 
                    // a closed connection.
                    Console.WriteLine("Rollback Exception Type: {0}", ex2.GetType());
                    Console.WriteLine("  Message: {0}", ex2.Message);
                }
            }
            finally
            {
                con.Close();
                clearsubCathead();
                AutoID();
                FillGrid();  

            } 
           
        }

        public void clearsubCathead()
        {
            TBaccountcategories.Value = "";
            TBAccountCategoryNameID.Text = "";
            HFAccountCategoryName.Value = "";
            DDLAccountName.SelectedValue = "0";
            DDLSubAccountName.SelectedValue = "0";
        }

        protected void DLLCatefourAccName_SelectedIndexChanged(object sender, EventArgs e)
        {
            query = "SELECT  SubHeadGeneratedID, SubHeadName FROM SubHead where HeadGeneratedID ='" + DLLCatefourAccName.SelectedValue.Trim() + 
                "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "' and SubHeadName not like '%DEL%'";

            DataTable dtcatefoirAccNam = new DataTable();
            dtcatefoirAccNam = DataAccess.DBConnection.GetQueryData(query);
            //DLLCategoriesfourSubAccountName.DataSource = SubHeadManager.GetSubHead(DLLCatefourAccName.SelectedValue);
            DLLCategoriesfourSubAccountName.DataSource = dtcatefoirAccNam; // SubHeadManager.GetSubHead(DLLCatefourAccName.SelectedValue);
            DLLCategoriesfourSubAccountName.DataTextField = "SubHeadName";
            DLLCategoriesfourSubAccountName.DataValueField = "SubHeadGeneratedID";
            DLLCategoriesfourSubAccountName.DataBind();
            DLLCategoriesfourSubAccountName.Items.Add(new ListItem("Select...", "0"));
            DLLCategoriesfourSubAccountName.SelectedValue = "0";
        }

        protected void DLLCategoriesfourSubAccountName_SelectedIndexChanged(object sender, EventArgs e)
        {
            query = "SELECT SubHeadCategoriesGeneratedID, SubHeadCategoriesName FROM SubHeadCategories where SubHeadGeneratedID ='" +
                DLLCategoriesfourSubAccountName.SelectedValue.Trim() + "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "'";

            DataTable dtcatefoirSubAccNam = new DataTable();

            dtcatefoirSubAccNam = DataAccess.DBConnection.GetQueryData(query);
            DLLCategoriesfourSubAccountCategoryName.DataSource = dtcatefoirSubAccNam;// subheadcategoryfourManager.GetHeadFour(DLLCategoriesfourSubAccountName.SelectedValue);
            DLLCategoriesfourSubAccountCategoryName.DataTextField = "SubHeadCategoriesName";
            DLLCategoriesfourSubAccountCategoryName.DataValueField = "SubHeadCategoriesGeneratedID";
            DLLCategoriesfourSubAccountCategoryName.DataBind();
            DLLCategoriesfourSubAccountCategoryName.Items.Add(new ListItem("Select...", "0"));
            DLLCategoriesfourSubAccountCategoryName.SelectedValue = "0";            
        }

        protected void LinkBtnaccountcategoriesfourInsert_Click(object sender, EventArgs e)
        {
            try
            {
                if (TBaccountcategoriesfour.Value == "" || DLLCatefourAccName.SelectedValue == "0" || DLLCategoriesfourSubAccountName.SelectedValue == "0" || DLLCategoriesfourSubAccountCategoryName.SelectedValue == "0")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Please Write SomeThing in Head Categories and also select some thing from Head and Sub Head!!";
                    TbAddSubAccount.Focus();

                }
                else
                {
                    subheadcategoryfour subheadfour = new subheadcategoryfour();

                    subheadfour.subheadcategoryfourID = HFsubAccountCategoryfour.Value;
                    subheadfour.subheadcategoryfourName = string.IsNullOrEmpty(TBaccountcategoriesfour.Value) ? null : TBaccountcategoriesfour.Value;
                    subheadfour.subheadcategoryfourGeneratedID = string.IsNullOrEmpty(TBaccountcategoriesfourGeneratedID.Text) ? null : TBaccountcategoriesfourGeneratedID.Text;
                    subheadfour.HeadGeneratedID = string.IsNullOrEmpty(DLLCatefourAccName.SelectedValue) ? null : DLLCatefourAccName.SelectedValue;
                    subheadfour.SubHeadGeneratedID = string.IsNullOrEmpty(DLLCategoriesfourSubAccountName.SelectedValue) ? null : DLLCategoriesfourSubAccountName.SelectedValue;
                    subheadfour.SubHeadCategoriesGeneratedID = string.IsNullOrEmpty(DLLCategoriesfourSubAccountCategoryName.SelectedValue) ? null : DLLCategoriesfourSubAccountCategoryName.SelectedValue;
                    subheadfour.CreatedAt = DateTime.Now;
                    subheadfour.CreatedBy = Session["user"].ToString();
                    subheadfour.SubFourKey = string.IsNullOrEmpty(TBaccountcategoriesfourGeneratedID.Text) ? null : TBaccountcategoriesfourGeneratedID.Text;


                    subheadcategoryfourManager subheadcatfour = new subheadcategoryfourManager(subheadfour);
                    subheadcatfour.Save();
                    
                    clearCatfour();
                    AutoID();
                    FillGrid();
                    //BindDll();
                    //TBaccountcategoriesfour.Focus();
                }

            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;

            }

        }

        public void clearCatfour()
        {
            HFsubAccountCategoryfour.Value = "";
            TBaccountcategoriesfour.Value = "";
            DLLCatefourAccName.SelectedValue = "0";
            DLLCategoriesfourSubAccountName.SelectedValue = "0";
            DLLCategoriesfourSubAccountCategoryName.SelectedValue = "0";
        }

        protected void DLLCatefiveAccName_SelectedIndexChanged(object sender, EventArgs e)
        {
            DLLCategoriesfiveSubAccountName.DataSource = SubHeadManager.GetSubHead(DLLCatefiveAccName.SelectedValue);
            DLLCategoriesfiveSubAccountName.DataTextField = "SubHeadName";
            DLLCategoriesfiveSubAccountName.DataValueField = "SubHeadGeneratedID";
            DLLCategoriesfiveSubAccountName.DataBind();
            DLLCategoriesfiveSubAccountName.Items.Add(new ListItem("Select...", "0"));
            DLLCategoriesfiveSubAccountName.SelectedValue = "0";
        }

        protected void DLLCategoriesfiveSubAccountName_SelectedIndexChanged(object sender, EventArgs e)
        {
            DLLCategoriesfiveSubAccountCategoryName.DataSource = subheadcategoryfourManager.GetHeadFour(DLLCategoriesfiveSubAccountName.SelectedValue);
            DLLCategoriesfiveSubAccountCategoryName.DataTextField = "SubHeadCategoriesName";
            DLLCategoriesfiveSubAccountCategoryName.DataValueField = "SubHeadCategoriesGeneratedID";
            DLLCategoriesfiveSubAccountCategoryName.DataBind();
            DLLCategoriesfiveSubAccountCategoryName.Items.Add(new ListItem("Select...", "0"));
            DLLCategoriesfiveSubAccountCategoryName.SelectedValue = "0";      
        }

        protected void DLLCategoriesfiveSubAccountCategoryName_SelectedIndexChanged(object sender, EventArgs e)
        {
            DLLCategoriesfiveSubAccountCategoryfourName.DataSource = subheadcategoryfiveManager.GetHeadFive(DLLCategoriesfiveSubAccountCategoryName.SelectedValue);
            DLLCategoriesfiveSubAccountCategoryfourName.DataTextField = "subheadcategoryfourName";
            DLLCategoriesfiveSubAccountCategoryfourName.DataValueField = "subheadcategoryfourGeneratedID";
            DLLCategoriesfiveSubAccountCategoryfourName.DataBind();
            DLLCategoriesfiveSubAccountCategoryfourName.Items.Add(new ListItem("Select...", "0"));
            DLLCategoriesfiveSubAccountCategoryfourName.SelectedValue = "0";
        }

       

        protected void LinkBtnsubaccountcategoriesfiveInsert_Click(object sender, EventArgs e)
        {
            try
            {
                if (TBsubaccountcategoriesfiveInsert.Value == "" || DLLCategoriesfiveSubAccountCategoryfourName.SelectedValue == "0" || DLLCategoriesfiveSubAccountCategoryName.SelectedValue == "0" || DLLCategoriesfiveSubAccountName.SelectedValue == "0" || DLLCatefiveAccName.SelectedValue == "0")
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Please Write SomeThing in Head Categories and also select some thing from Head and Sub Head and Sub Head Category and Others!!";
                    TbAddSubAccount.Focus();

                }
                else
                {
                    subheadcategoryfive subheadfive = new subheadcategoryfive();

                    subheadfive.subheadcategoryfiveID = HFAccountCategoryfive.Value;
                    subheadfive.subheadcategoryfiveName = string.IsNullOrEmpty(TBsubaccountcategoriesfiveInsert.Value) ? null : TBsubaccountcategoriesfiveInsert.Value;
                    subheadfive.subheadcategoryfiveGeneratedID = string.IsNullOrEmpty(TBsubaccountcategoriesfiveGeneratedID.Text) ? null : TBsubaccountcategoriesfiveGeneratedID.Text;
                    subheadfive.HeadGeneratedID = string.IsNullOrEmpty(DLLCatefiveAccName.SelectedValue) ? null : DLLCatefiveAccName.SelectedValue;
                    subheadfive.SubHeadGeneratedID = string.IsNullOrEmpty(DLLCategoriesfiveSubAccountName.SelectedValue) ? null : DLLCategoriesfiveSubAccountName.SelectedValue;
                    subheadfive.SubHeadCategoriesGeneratedID = string.IsNullOrEmpty(DLLCategoriesfiveSubAccountCategoryName.SelectedValue) ? null : DLLCategoriesfiveSubAccountCategoryName.SelectedValue;
                    subheadfive.subheadcategoryfourGeneratedID = string.IsNullOrEmpty(DLLCategoriesfiveSubAccountCategoryfourName.SelectedValue) ? null : DLLCategoriesfiveSubAccountCategoryfourName.SelectedValue;
                    subheadfive.CreatedAt = DateTime.Now;
                    subheadfive.CreatedBy = Session["user"].ToString();
                    subheadfive.SubFiveKey = string.IsNullOrEmpty(TBsubaccountcategoriesfiveInsert.Value) ? null : TBsubaccountcategoriesfiveInsert.Value;

                    subheadcategoryfiveManager subheadcatfive = new subheadcategoryfiveManager(subheadfive);
                    subheadcatfive.Save();

                    clearCatfive();
                    AutoID();
                    FillGrid();
                    //BindDll();
                    TBsubaccountcategoriesfiveInsert.Focus();
                }
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;

            }
        }

        public void clearCatfive()
        {
            TBsubaccountcategoriesfiveInsert.Value = "";
            HFAccountCategoryfive.Value = "";
            DLLCatefiveAccName.SelectedValue = "0";
            DLLCategoriesfiveSubAccountName.SelectedValue = "0";
            DLLCategoriesfiveSubAccountCategoryName.SelectedValue = "0";
            DLLCategoriesfiveSubAccountCategoryfourName.SelectedValue = "0";

        }

        protected void TBHead_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (TBHead.Text == "")
                {
                    FillGrid();
                }
                else
                {
                    query = "Select HeadID, HeadGeneratedID, HeadName from Head where HeadGeneratedID = '" + TBHead.Text.Trim() + "' or HeadName = '" + TBHead.Text.Trim() + "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "'";

                    DataTable dtsearchhead = DataAccess.DBConnection.GetQueryData(query); //HeadManager.GetHeadForGrid(TBHead.Text.Trim()); 

                    GVAccouont.DataSource = dtsearchhead;
                    GVAccouont.DataBind();

                    ViewState["getdtgvHead"] = dtsearchhead;
                }
            }
            catch
            {
                throw;
            }

        }

        protected void TBSubAcc_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (TBSubAcc.Text == "")
                {
                    FillGrid();
                }
                else
                {
                    query = "Select HeadID, HeadGeneratedID, HeadName from Head where HeadGeneratedID = '" + TBHead.Text.Trim() + "' or HeadName = '" + TBHead.Text.Trim() + "' and CompanyId='" + Session["CompanyID"] + "' and BranchId='" + Session["BranchID"] + "'";

                    DataTable dtsearchSubhead = SubHeadManager.GetSubHeadForGrid(TBSubAcc.Text.Trim());
                    GVSubAcc.DataSource = dtsearchSubhead;
                    GVSubAcc.DataBind();

                    ViewState["getdtgvSubHead"] = dtsearchSubhead;
                }
            }
            catch
            {
                throw;
            }
        }


        protected void TBSubHeadCategories_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (TBSubHeadCategories.Text == "")
                {
                    FillGrid();
                }
                else
                {

                    DataTable dtsearchSubHeadCategories = SubHeadCategoriesManager.GetSubHeadCatGrid(TBSubHeadCategories.Text.Trim());

                    GVSubAccountCatgories.DataSource = dtsearchSubHeadCategories;
                    GVSubAccountCatgories.DataBind();

                    ViewState["getdtgvAccCategories"] = dtsearchSubHeadCategories;
                }
            }
            catch
            {
                throw;
            }
        }

        protected void TBsubheadcategoryfour_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (TBsubheadcategoryfour.Text == "")
                {
                    FillGrid();
                }
                else
                {
                    string searchSubHeadCategoriesFour = "Select * from subheadcategoryfour where subheadcategoryfourGeneratedID = '" + TBsubheadcategoryfour.Text.Trim() +
                        "' or subheadcategoryfourName = '" + TBsubheadcategoryfour.Text.Trim() + "' or SubHeadCategoriesGeneratedID = '" + TBsubheadcategoryfour.Text.Trim() +
                        "' or HeadGeneratedID = '" + TBsubheadcategoryfour.Text.Trim() + "' or SubHeadGeneratedID = '" + TBsubheadcategoryfour.Text.Trim() + "'";
                    //DataTable dtsearchSubHeadCategoriesFour = subheadcategoryfourManager.GetHeadFou(TBsubheadcategoryfour.Text.Trim());
                    DataTable dtsearchSubHeadCategoriesFour = DataAccess.DBConnection.GetDataTable(searchSubHeadCategoriesFour);

                    GVFour.DataSource = dtsearchSubHeadCategoriesFour;
                    GVFour.DataBind();

                    ViewState["getdtgvfour"] = dtsearchSubHeadCategoriesFour;
                }
            }
            catch
            {
                throw;
            }
        }

        protected void TBSearchsubheadcategoryfive_TextChanged(object sender, EventArgs e)
        {
            try
            {
                if (TBSearchsubheadcategoryfive.Text == "")
                {
                    FillGrid();
                }
                else
                {
                    string searchSubHeadCategoriesFive = "Select * from subheadcategoryfive where subheadcategoryfiveGeneratedID = '" + TBSearchsubheadcategoryfive.Text.Trim() +
                        "' or subheadcategoryfiveName = '" + TBSearchsubheadcategoryfive.Text.Trim() + "' or HeadGeneratedID = '" + TBSearchsubheadcategoryfive.Text.Trim() +
                        "' or SubHeadGeneratedID = '" + TBSearchsubheadcategoryfive.Text.Trim() + "' or SubHeadCategoriesGeneratedID = '" + TBSearchsubheadcategoryfive.Text.Trim() +
                        "' or subheadcategoryfourGeneratedID = '" + TBSearchsubheadcategoryfive.Text.Trim() + "'";

                    //DataTable dtsearchSubHeadCategoriesFive = subheadcategoryfiveManager.GetHeadFiv(TBSearchsubheadcategoryfive.Text.Trim());

                    DataTable dtsearchSubHeadCategoriesFive = DataAccess.DBConnection.GetDataTable(searchSubHeadCategoriesFive);

                    GVFive.DataSource = dtsearchSubHeadCategoriesFive;
                    GVFive.DataBind();
                    ViewState["getdtgvAccFive"] = dtsearchSubHeadCategoriesFive;
                }
            }
            catch
            {
                throw;
            }
        }

        protected void GVAccouont_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {
                System.Threading.Thread.Sleep(1000);

                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                HFaccount.Value = GVAccouont.DataKeys[row.RowIndex].Values[1] != null ? GVAccouont.DataKeys[row.RowIndex].Values[1].ToString() : null;

                ViewState["HeadID"] = HFaccount.Value;

                DataTable dtSubAccountData = new DataTable();
                dtSubAccountData = ChartofAccManager.GetSubHead(HFaccount.Value);
                GVSubAcc.DataSource = dtSubAccountData;
                GVSubAcc.DataBind();


                DataTable dtSubHeadCategories = new DataTable();
                dtSubHeadCategories = ChartofAccManager.GetSubCatHead(HFaccount.Value);
                GVSubAccountCatgories.DataSource = dtSubHeadCategories;
                GVSubAccountCatgories.DataBind();

                DataTable dtGVFour = new DataTable();
                dtGVFour = ChartofAccManager.GetHeadFour(HFaccount.Value);
                GVFour.DataSource = dtGVFour;
                GVFour.DataBind();

                DataTable dtGVFive = new DataTable();
                dtGVFive = ChartofAccManager.GetHeadFive(HFaccount.Value);
                GVFive.DataSource = dtGVFive;
                GVFive.DataBind();

            }
        }

        protected void GVSubAcc_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {
                System.Threading.Thread.Sleep(1000);

                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                HFSubAcc.Value = GVSubAcc.DataKeys[row.RowIndex].Values[1] != null ? GVSubAcc.DataKeys[row.RowIndex].Values[1].ToString() : null;

                ViewState["SubHeadID"] = HFSubAcc.Value;



                DataTable dtSubHeadCategories = new DataTable();
                dtSubHeadCategories = ChartofAccManager.GetSubCatHead(HFSubAcc.Value);
                GVSubAccountCatgories.DataSource = dtSubHeadCategories;
                GVSubAccountCatgories.DataBind();

                DataTable dtGVFour = new DataTable();
                dtGVFour = ChartofAccManager.GetHeadFour(HFSubAcc.Value);
                GVFour.DataSource = dtGVFour;
                GVFour.DataBind();

                DataTable dtGVFive = new DataTable();
                dtGVFive = ChartofAccManager.GetHeadFive(HFSubAcc.Value);
                GVFive.DataSource = dtGVFive;
                GVFive.DataBind();

            }
        }

        protected void GVSubAccountCatgories_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {
                System.Threading.Thread.Sleep(1000);

                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                HFAccCatName.Value = GVSubAccountCatgories.DataKeys[row.RowIndex].Values[3] != null ? GVSubAccountCatgories.DataKeys[row.RowIndex].Values[3].ToString() : null;

                ViewState["AccCatName"] = HFAccCatName.Value;

                DataTable dtGVFour = new DataTable();
                dtGVFour = ChartofAccManager.GetHeadFour(HFAccCatName.Value);
                GVFour.DataSource = dtGVFour;
                GVFour.DataBind();

                DataTable dtGVFive = new DataTable();
                dtGVFive = ChartofAccManager.GetHeadFive(HFAccCatName.Value);
                GVFive.DataSource = dtGVFive;
                GVFive.DataBind();

            }
        }

        protected void GVFour_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            if (e.CommandName == "Select")
            {
                System.Threading.Thread.Sleep(1000);
                GridViewRow row = (GridViewRow)(((LinkButton)e.CommandSource).NamingContainer);
                HFGVFour.Value = GVFour.DataKeys[row.RowIndex].Values[1] != null ? GVFour.DataKeys[row.RowIndex].Values[1].ToString() : null;

                ViewState["AccFour"] = HFGVFour.Value;

                DataTable dtFive = new DataTable();
                dtFive = ChartofAccManager.GetHeadFive(HFGVFour.Value);
                GVFive.DataSource = dtFive;
                GVFive.DataBind();

            }
        }

        protected void LBDeleteGVFive_Click(object sender, EventArgs e)
        {
            try
            {
                //<asp:TemplateField>
                //    <ItemTemplate>
                //        <asp:LinkButton ID="LBDeleteGVFive" runat="server" OnClick="LBDeleteGVFive_Click" ><i class="halflings-icon minus-sign"></i></asp:LinkButton>
                //    </ItemTemplate>
                //</asp:TemplateField>
                LinkButton btn = sender as LinkButton;
                GridViewRow row = btn.NamingContainer as GridViewRow;

                string SubHdCatFvID = GVFive.DataKeys[row.RowIndex].Values[1] != null ? GVFive.DataKeys[row.RowIndex].Values[1].ToString() : null;

                string DelSHCatFv = "Select subheadcategoryfiveGeneratedID from subheadcategoryfive where subheadcategoryfiveGeneratedID = '" + SubHdCatFvID + "'";
                DataTable dtSHCatFv = new DataTable();
                dtSHCatFv = DBConnection.GetDataTable(DelSHCatFv);

                if (dtSHCatFv.Rows.Count > 0)
                {
                    query = " update subheadcategoryfive set subheadcategoryfiveName = 'Del',  CreatedBy = '" + Session["user"].ToString() + "' ,SubFiveKey = subheadcategoryfiveGeneratedID  FROM subheadcategoryfive where subheadcategoryfiveGeneratedID ='" + SubHdCatFvID + "'";
                    dbconnection.DeleteData(SubHdCatFvID, query);

                    //query = "delete from Products where Pro_Code = '" + SubHdCatFvID + "'";
                    //dbconnection.DeleteData(SubHdCatFvID, query);
                    Response.Redirect("ChartofAccount.aspx");                    
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Account:" + SubHdCatFvID + "is not Exists!!";
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        protected void LBDeleteGVFour_Click(object sender, EventArgs e)
        {
            try
            {
                //<asp:TemplateField>
                //    <ItemTemplate>
                //        <asp:LinkButton ID="LBDeleteGVFour" runat="server" OnClick="LBDeleteGVFour_Click"  ><i class="halflings-icon minus-sign"></i></asp:LinkButton>
                //    </ItemTemplate>
                //</asp:TemplateField>

                LinkButton btn = sender as LinkButton;
                GridViewRow row = btn.NamingContainer as GridViewRow;

                string SubHdCatFrID = GVFour.DataKeys[row.RowIndex].Values[1] != null ? GVFour.DataKeys[row.RowIndex].Values[1].ToString() : null;

                string DelSHCatFr = "Select subheadcategoryfourGeneratedID from subheadcategoryfour where subheadcategoryfourGeneratedID = '" + SubHdCatFrID + "'";
                DataTable dtSHCatFr = new DataTable();
                dtSHCatFr = DBConnection.GetDataTable(DelSHCatFr);

                if (dtSHCatFr.Rows.Count > 0)
                {
                    string DelSCHFive = "Select subheadcategoryfourGeneratedID from subheadcategoryfive where subheadcategoryfourGeneratedID = '" + SubHdCatFrID + "'";
                    DataTable dtSCatFiv = new DataTable();
                    dtSCatFiv = DBConnection.GetDataTable(DelSCHFive);

                    if (dtSCatFiv.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdCatFrID + "Can not Deleted As It is Exits in the Software!!";

                    }
                    else
                    {
                        query = " update subheadcategoryfour set subheadcategoryfourName = 'Del',  CreatedBy = '" + Session["user"].ToString() + "' ,SubFourKey = subheadcategoryfourGeneratedID  FROM subheadcategoryfour where subheadcategoryfourGeneratedID ='" + SubHdCatFrID + "'";
                        dbconnection.DeleteData(SubHdCatFrID, query);
                        Response.Redirect("ChartofAccount.aspx");
                    }
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Account:" + SubHdCatFrID + "is not Exists!!";
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void LBDeleteSubAccountCatgories_Click(object sender, EventArgs e)
        {
            try
            {
                //<asp:TemplateField>
                //    <ItemTemplate>
                //        <asp:LinkButton ID="LBDeleteSubAccountCatgories" runat="server"  OnClick="LBDeleteSubAccountCatgories_Click"  ><i class="halflings-icon minus-sign"></i></asp:LinkButton>
                //    </ItemTemplate>
                //</asp:TemplateField>

                LinkButton btn = sender as LinkButton;
                GridViewRow row = btn.NamingContainer as GridViewRow;

                string SubHdCatID = GVSubAccountCatgories.DataKeys[row.RowIndex].Values[1] != null ? GVSubAccountCatgories.DataKeys[row.RowIndex].Values[1].ToString() : null;

                string DelSHCat = "Select SubHeadCategoriesGeneratedID from SubHeadCategories where SubHeadCategoriesGeneratedID = '" + SubHdCatID + "'";
                DataTable dtSHCat = new DataTable();
                dtSHCat = DBConnection.GetDataTable(DelSHCat);

                if (dtSHCat.Rows.Count > 0)
                {
                    string DelSCHFour = "Select SubHeadCategoriesGeneratedID from subheadcategoryfour where SubHeadCategoriesGeneratedID = '" + SubHdCatID + "'";
                    DataTable dtSCatF = new DataTable();
                    dtSCatF = DBConnection.GetDataTable(DelSCHFour);

                    string DelSCHFive = "Select SubHeadCategoriesGeneratedID from subheadcategoryfive where SubHeadCategoriesGeneratedID = '" + SubHdCatID + "'";
                    DataTable dtSCatFiv = new DataTable();
                    dtSCatFiv = DBConnection.GetDataTable(DelSCHFive);
                 
                    if (dtSCatF.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdCatID + "Can not Deleted As It is Exits in the Software!!";

                    }
                    else if (dtSCatFiv.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdCatID + "Can not Deleted As It is Exits in the Software!!";
                    }
                    else
                    {
                        query = " update SubHeadCategories set SubHeadCategoriesName = 'Del',  CreatedBy = '" + Session["user"].ToString() + "' ,SubCategoriesKey = SubHeadCategoriesGeneratedID  FROM SubHeadCategories where SubHeadCategoriesGeneratedID ='" + SubHdCatID + "'";
                        dbconnection.DeleteData(SubHdCatID, query);
                        Response.Redirect("ChartofAccount.aspx");
                    }
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Account:" + SubHdCatID + "is not Exists!!";
                }
            }
            catch (Exception ex)
            {
                throw ex;
            } 
        }

        protected void LBDeleteSubAcc_Click(object sender, EventArgs e)
        {
            try
            {
                //<asp:TemplateField>
                //    <ItemTemplate>
                //        <asp:LinkButton ID="LBDeleteSubAcc" runat="server"  OnClick="LBDeleteSubAcc_Click"  ><i class="halflings-icon minus-sign"></i></asp:LinkButton>
                //    </ItemTemplate>
                //</asp:TemplateField>
                LinkButton btn = sender as LinkButton;
                GridViewRow row = btn.NamingContainer as GridViewRow;

                string SubHdGenID = GVSubAcc.DataKeys[row.RowIndex].Values[1] != null ? GVSubAcc.DataKeys[row.RowIndex].Values[1].ToString() : null;

                string DelSH = "Select SubHeadGeneratedID from SubHead where SubHeadGeneratedID = '" + SubHdGenID + "'";              
                DataTable dtSH = new DataTable();
                dtSH = DBConnection.GetDataTable(DelSH);

                if (dtSH.Rows.Count > 0)
                {

                    string DelSCH = "Select SubHeadGeneratedID from SubHeadCategories where SubHeadGeneratedID = '" + SubHdGenID + "'";
                    DataTable dtSCatD = new DataTable();
                    dtSCatD = DBConnection.GetDataTable(DelSCH);


                    string DelSCHFour = "Select SubHeadGeneratedID from subheadcategoryfour where SubHeadGeneratedID = '" + SubHdGenID + "'";
                    DataTable dtSCatF = new DataTable();
                    dtSCatF = DBConnection.GetDataTable(DelSCHFour);

                    string DelSCHFive = "Select SubHeadGeneratedID from subheadcategoryfive where SubHeadGeneratedID = '" + SubHdGenID + "'";
                    DataTable dtSCatFiv = new DataTable();
                    dtSCatFiv = DBConnection.GetDataTable(DelSCHFive);

                    if (dtSCatD.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdGenID + "Can not Deleted As It is Exits in the Software!!";

                    }else if (dtSCatF.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdGenID + "Can not Deleted As It is Exits in the Software!!";
                   
                    }else if (dtSCatFiv.Rows.Count > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                        lblalert.Text = SubHdGenID + "Can not Deleted As It is Exits in the Software!!";
                    }
                    else
                    {
                        query = " update SubHead set SubHeadName = 'Del',  CreatedBy = '" + Session["user"].ToString() + "' ,SubHeadKey = SubHeadGeneratedID  FROM SubHead where SubHeadGeneratedID ='" + SubHdGenID + "'";
                        dbconnection.DeleteData(SubHdGenID, query);
                        Response.Redirect("ChartofAccount.aspx");
                    }
                }
                else    
                {
                    ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                    lblalert.Text = "Account:" + SubHdGenID + "is not Exists!!";                 
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        protected void GVSubAcc_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            //DeleteData
        }

        #region Gridview  Updating Handling Events

        #region Sub Account Grid Handling Gridview

        protected void GVSubAcc_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GVSubAcc.EditIndex = e.NewEditIndex;
            //FillGrid();
        }

        protected void GVSubAcc_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GVSubAcc.EditIndex = -1;
            FillGrid();
        }

        protected void GVSubAcc_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            try
            {
                int subaccid = Convert.ToInt32(GVSubAcc.DataKeys[e.RowIndex].Value.ToString());
                GridViewRow row = (GridViewRow)GVSubAcc.Rows[e.RowIndex];
                TextBox TBSubHead = (TextBox)row.Cells[2].FindControl("TBSubHead");

                GVSubAcc.EditIndex = -1;
                con.Open();
                SqlCommand cmd = new SqlCommand("update SubHead set SubHeadName='" + TBSubHead.Text + "'where SubHeadID='" + subaccid + "'", con);
                cmd.ExecuteNonQuery();
                con.Close();
                FillGrid();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }
        #endregion
        
        #region Sub Account category Grid Handling Gridview

        protected void GVSubAccountCatgories_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GVSubAccountCatgories.EditIndex = e.NewEditIndex;
            //FillGrid();
        }

        protected void GVSubAccountCatgories_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GVSubAccountCatgories.EditIndex = -1;
            FillGrid();
        }

        protected void GVSubAccountCatgories_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            try
            {
                int subacccatid = Convert.ToInt32(GVSubAccountCatgories.DataKeys[e.RowIndex].Value.ToString());
                GridViewRow row = (GridViewRow)GVSubAccountCatgories.Rows[e.RowIndex];
                TextBox TBSHdCatNam = (TextBox)row.Cells[2].FindControl("TBSubHeadCategoriesName");

                GVSubAccountCatgories.EditIndex = -1;
                con.Open();
                SqlCommand cmd = new SqlCommand("update SubHeadCategories set SubHeadCategoriesName='" + TBSHdCatNam.Text + "'where SubHeadCategoriesID='" + subacccatid + "'", con);
                cmd.ExecuteNonQuery();
                con.Close();
                FillGrid();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }
        #endregion

        #region Sub Account category  Four Grid Handling Gridview

        protected void GVFour_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GVFour.EditIndex = e.NewEditIndex;
            //FillGrid();
        }

        protected void GVFour_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GVFour.EditIndex = -1;
            FillGrid();
        }

        protected void GVFour_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            try
            {
                int subacccatFrid = Convert.ToInt32(GVFour.DataKeys[e.RowIndex].Value.ToString());
                GridViewRow row = (GridViewRow)GVFour.Rows[e.RowIndex];
                TextBox TBShdcatfrNam = (TextBox)row.Cells[2].FindControl("TBsubheadcategoryfourName");

                GVFour.EditIndex = -1;
                con.Open();
                SqlCommand cmd = new SqlCommand("update subheadcategoryfour set subheadcategoryfourName='" + TBShdcatfrNam.Text + "'where subheadcategoryfourID='" + subacccatFrid + "'", con);
                cmd.ExecuteNonQuery();
                con.Close();
                FillGrid();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }
        #endregion

        #region Sub Account category  Five Grid Handling Gridview

        protected void GVFive_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GVFive.EditIndex = e.NewEditIndex;
            //FillGrid();
        }

        protected void GVFive_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GVFive.EditIndex = -1;
            FillGrid();
        }

        protected void GVFive_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            try
            {//GVSupplier.DataKeys[row.RowIndex].Values[0].ToString();
                int subacccatFvid = Convert.ToInt32(GVFive.DataKeys[e.RowIndex].Value.ToString());
                GridViewRow row = (GridViewRow)GVFive.Rows[e.RowIndex];
                TextBox TBShdcatfvNam = (TextBox)row.Cells[2].FindControl("TBsubheadcategoryfiveName");

                GVFive.EditIndex = -1;

                //SqlCommand cmd = new SqlCommand("update subheadcategoryfive set subheadcategoryfiveName='" + TBShdcatfvNam.Text + "'where subheadcategoryfiveID='" + subacccatFvid + "'", con);
                if (TBShdcatfvNam.Text == "")
                {
                    query = "update subheadcategoryfive set isflag ='' where subheadcategoryfiveID='" + subacccatFvid + "'";
                }
                else
                {
                    query = "update subheadcategoryfive set subheadcategoryfiveName='" + TBShdcatfvNam.Text + "' where subheadcategoryfiveID='" + subacccatFvid + "'";
                }
                dbconnection.CRUDRecords(query);                
                FillGrid();
            }
            catch (Exception ex)
            {
                ScriptManager.RegisterStartupScript(this, this.GetType(), "isActive", "Alert();", true);
                lblalert.Text = ex.Message;
            }
        }
        #endregion

        #endregion 
    }
}